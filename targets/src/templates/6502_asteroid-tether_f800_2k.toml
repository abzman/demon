
[[Defs]]
comment = 'Start of chip memory mapping'
STRTADD = 0xf800

[[Defs]]
comment = '2K ROM'
ROMSIZE = 0x0800

[[Defs]]
comment = '''
Start of ram, needs 7 bytes starting here
On the 6502, you can usually you can count on there being RAM in page 0'''
RAMSTRT = 0x0000

[[Defs]]
comment = '''
Start of stack, needs some memory below this address
On the 6502, this is in page 1, so this actually represents
address 0x0100+SSTACK'''
SSTACK = 0x00ff

[[Defs]]
comment = 'delay factor'
BIGDEL = 0x0180

[Code]
#--------------------------------------------------------------------------
# NMI HANDLER
#--------------------------------------------------------------------------
NMI = '''
;
;       NMI HANDLER
;
NMI:
        rti
'''

#--------------------------------------------------------------------------
# START Routine
#
# This is called once, and can be used do any target-specific
# initialization that is required
#--------------------------------------------------------------------------
start = '''
;
;       START CODE
;
START:
        sei              ; Disable interrupts - we don't handle them
        ldx     #SSTACK  ; set up the stack
        txs
        cld              ; No Decimal
;       YOUR CODE CAN GO HERE
        jmp     INIT
'''

#--------------------------------------------------------------------------
# EVERY MACRO
# This is called regularly, every polling loop, and can be used do any 
# target-specific task that is required, such as hitting a watchdog
#--------------------------------------------------------------------------
every = '''
;
;       EVERY CODE
;
EVERY:
;       YOUR CODE CAN GO HERE
        rts
'''

[[Region]]
code  = [
    { link = "core/dd.def" }, 
    { link = "core/6502.def" }
]

[[Region]] 
start = 'STRTADD'
end = 'VECTORS'
code=[
    { insert = 'start' },
    { link = "core/6502_main.asm" },
    { insert = 'every' },
    { link = "io/asteroid-tether.asm" },
    { insert = 'NMI' }
]

[[Region]]
start = 'VECTORS'
end   = 'ROMSIZE'
code  = [
    { link = "core/6502_vectors.asm" }
]
