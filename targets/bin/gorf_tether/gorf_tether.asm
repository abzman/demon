;****************************************************************
; This file is auto-generated by ddmake from gorf_tether.toml
; *** DO NOT EDIT ***
;****************************************************************

; Start of chip memory mapping
STRTADD = 0x0000

; 2K ROM
ROMSIZE = 0x0800

; The code actually needs 4 bytes ram at this address for the command buffer.
; However, stack also starts here, and will grow down (towards 0) from this point.
; So, we need some above and below this address.  I generally choose the
; Top of RAM minus 16
RAMADDR = 0xdff0

; delay factor
BIGDEL = 0x0180

        .include "../core/dd.def"
        .include "../core/z80.def"

;------- region1  -----------------------------------------------

        .bank   region1 (base=STRTADD, size=IRQADD-STRTADD)
        .area   region1 (ABS, BANK=region1)

;
;       START CODE
;
START:
        DI                  ; Disable interrupts - we don't handle them
        LD      SP,RAMADDR  ; have to set valid SP
;       YOUR SMALL CODE CAN GO HERE
        JP      START2


;------- region2  -----------------------------------------------

        .bank   region2 (base=IRQADD, size=NMIADD-IRQADD)
        .area   region2 (ABS, BANK=region2)

;
;       IRQ HANDLER
;
IRQ:
        RETI


;------- region3  -----------------------------------------------

        .bank   region3 (base=NMIADD, size=ROMEND-NMIADD)
        .area   region3 (ABS, BANK=region3)

NMI:    JP      START       ; restart on test button press

;
;       START CODE 2
;
START2:
;       YOUR CODE CAN GO HERE
        JP      INIT

        .include "../core/z80_main.asm"
;
;       EVERY CODE
;
EVERY:
        IN	A,(0x10)    ; hit watchdog
        RET

        .include "../io/gorf-tether.asm"

