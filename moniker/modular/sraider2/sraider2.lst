ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 1
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



                              1 
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 2
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



                              2         .include "settings.asm"
                              1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                              2 ; You will need to adjust these variables for different targets
                              3 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                              4 
                              5 ; RAM SETTINGS
                              6 
                     63F0     7 RAMADDR .equ    0x63f0      ; Start of RAM variables - need only 4 bytes here, but we have 16
                              8                             ; Stack will grow towards 0 from this point
                              9 
                             10 ; ROM SETTINGS - usually the first 2K of memory for z80
                             11 
                     0000    12 STRTADD .equ    0x0000      ; start of chip memory mapping
                     0066    13 NMIADD  .equ    0x0066      ; location of NMI handler
                             14 
                             15 ; TIMER SETTING
                     0180    16 BIGDEL  .equ    0x0180      ;delay factor
                             17 
                             18 ; I2C ADDRESSING
                     0011    19 I2CRADR .equ    0x11        ; I2C read address  - I2C address 0x08
                     0010    20 I2CWADR .equ    0x10        ; I2C write address - I2C address 0x08
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 3
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



                              3 
                              4 	; This section must end before NMI Handler
                              5         .bank   first   (base=STRTADD, size=NMIADD-STRTADD)
                              6         .area   first   (ABS, BANK=first)
                              7 
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 4
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



                              8         .include "../z80/startup.asm" 
                              1 
   0000 F3            [ 4]    2 START:  DI                  ; Disable interrupts - we don't handle them
   0001 C3 F3 00      [10]    3         JP      INIT        ; go to initialization code
                              4 
                              5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                              6 ; This function is called once, and should be used do any game-specific
                              7 ; initialization that is required
                              8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                              9 
   0004                      10 ONCE:   
                             11 ;       YOUR CODE CAN GO HERE
   0004 C9            [10]   12         RET
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 5
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



                              9         .include "../z80/romio.asm" 
                     0400     1 IOREG   .equ	STRTADD+0x0400    ;reserved region for IO
                              2 
                              3 ; Set the SCL pin high
                              4 ; D is the global coin counter buffer
                              5 ; Destroys A
   0005                       6 SETSCL:
   0005 7A            [ 4]    7         LD      A,D
   0006 F6 01         [ 7]    8         OR      0x01
   0008 57            [ 4]    9         LD      D,A
   0009 E5            [11]   10         PUSH    HL
   000A 26 04         [ 7]   11         LD      H,#>IOREG
   000C 6F            [ 4]   12         LD      L,A
   000D 7E            [ 7]   13         LD      A,(HL)
   000E E1            [10]   14         POP     HL
   000F CD 02 00      [17]   15         CALL    I2CDELAY
   0012 C9            [10]   16         RET
                             17     
                             18 ; Set the SCL pin low
                             19 ; D is the global coin counter buffer
                             20 ; Destroys A
   0013                      21 CLRSCL:
   0013 7A            [ 4]   22         LD      A,D
   0014 E6 FE         [ 7]   23         AND     0xFE
   0016 57            [ 4]   24         LD      D,A
   0017 E5            [11]   25         PUSH    HL
   0018 26 04         [ 7]   26         LD      H,#>IOREG
   001A 6F            [ 4]   27         LD      L,A
   001B 7E            [ 7]   28         LD      A,(HL)
   001C E1            [10]   29         POP     HL
   001D C9            [10]   30         RET
                             31 
                             32 ; Set the DOUT pin low
                             33 ; D is the global coin counter buffer
                             34 ; Destroys A 
   001E                      35 SETSDA:
   001E 7A            [ 4]   36         LD      A,D
   001F E6 FD         [ 7]   37         AND     0xFD
   0021 57            [ 4]   38         LD      D,A
   0022 E5            [11]   39         PUSH    HL
   0023 26 04         [ 7]   40         LD      H,#>IOREG
   0025 6F            [ 4]   41         LD      L,A
   0026 7E            [ 7]   42         LD      A,(HL)
   0027 E1            [10]   43         POP     HL
   0028 CD 02 00      [17]   44         CALL    I2CDELAY
   002B C9            [10]   45         RET
                             46 
                             47 ; Set the DOUT pin high
                             48 ; D is the global coin counter buffer
                             49 ; Destroys A  
   002C                      50 CLRSDA:
   002C 7A            [ 4]   51         LD      A,D
   002D F6 02         [ 7]   52         OR      0x02
   002F 57            [ 4]   53         LD      D,A
   0030 E5            [11]   54         PUSH    HL
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 6
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



   0031 26 04         [ 7]   55         LD      H,#>IOREG
   0033 6F            [ 4]   56         LD      L,A
   0034 7E            [ 7]   57         LD      A,(HL)
   0035 E1            [10]   58         POP     HL
   0036 CD 02 00      [17]   59         CALL    I2CDELAY
   0039 C9            [10]   60         RET
                             61 
                             62 ; Read the DIN pin 
                             63 ; returns bit in carry flag    
   003A                      64 READSDA:
   003A 7A            [ 4]   65         LD      A,D
   003B E5            [11]   66         PUSH    HL
   003C 26 04         [ 7]   67         LD      H,#>IOREG
   003E 6F            [ 4]   68         LD      L,A
   003F 7E            [ 7]   69         LD      A,(HL)
   0040 E1            [10]   70         POP     HL
   0041 CB 3F         [ 8]   71         SRL     A           ;carry flag
   0043 C9            [10]   72         RET
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 7
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



                             10         .include "../z80/loop.asm"
   0044                       1 EVERY:  
                              2 ;       YOUR CODE CAN GO HERE
   0044 C9            [10]    3         RET
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 8
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



                             11 
                             12 	; This section must end before IO Region
                             13         .bank   second   (base=NMIADD, size=IOREG-NMIADD)
                             14         .area   second   (ABS, BANK=second)
                             15 
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 9
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



                             16         .include "../z80/nmi.asm"
   0000 ED 45         [14]    1 NMI:    RETN
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                 Page 10
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



                             17         .include "../z80/main.asm"
                              1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                              2 ; RAM Variables	
                              3 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                              4 
                     63F0     5 CMDBUF  .equ    RAMADDR         ; Need only 4 bytes of ram for command buffer
                              6 
                              7 ; Delay for half a bit time
   0002                       8 I2CDELAY:
   0002 C9            [10]    9         RET     ; This is plenty
                             10 
                             11 ; I2C Start Condition
                             12 ; Uses HL
                             13 ; Destroys A
   0003                      14 I2CSTART:
   0003 CD 2C 00      [17]   15         CALL    CLRSDA      
   0006 CD 13 00      [17]   16         CALL    CLRSCL
   0009 C9            [10]   17         RET
                             18 
                             19 ; I2C Stop Condition
                             20 ; Uses HL
                             21 ; Destroys A
   000A                      22 I2CSTOP:
   000A CD 2C 00      [17]   23         CALL    CLRSDA
   000D CD 05 00      [17]   24         CALL    SETSCL
   0010 CD 1E 00      [17]   25         CALL    SETSDA
   0013 C9            [10]   26         RET
                             27 
                             28 ; I2C Read Bit routine
                             29 ; Returns bit in carry blag
                             30 ; Destroys A
   0014                      31 I2CRBIT:
   0014 CD 1E 00      [17]   32         CALL    SETSDA
   0017 CD 05 00      [17]   33         CALL    SETSCL
   001A CD 3A 00      [17]   34         CALL    READSDA
   001D F5            [11]   35         PUSH    AF          ; save carry flag
   001E CD 13 00      [17]   36         CALL    CLRSCL
   0021 F1            [10]   37         POP     AF          ; rv in carry flag
   0022 C9            [10]   38         RET
                             39 
                             40 ; I2C Write Bit routine
                             41 ; Takes carry flag
                             42 ; Destroys A
   0023                      43 I2CWBIT:
   0023 30 05         [12]   44         JR      NC,DOCLR
   0025 CD 1E 00      [17]   45         CALL    SETSDA
   0028 18 03         [12]   46         JR      AHEAD
   002A                      47 DOCLR:
   002A CD 2C 00      [17]   48         CALL    CLRSDA
   002D                      49 AHEAD:
   002D CD 05 00      [17]   50         CALL    SETSCL
   0030 CD 13 00      [17]   51         CALL    CLRSCL
   0033 C9            [10]   52         RET
                             53 
                             54 ; I2C Write Byte routine
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                 Page 11
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



                             55 ; Takes A
                             56 ; Destroys B
                             57 ; Returns carry bit
   0034                      58 I2CWBYTE:
   0034 06 08         [ 7]   59         LD      B,8
   0036                      60 ILOOP:
   0036 C5            [11]   61         PUSH    BC          ; save B
   0037 CB 07         [ 8]   62         RLC     A    
   0039 F5            [11]   63         PUSH    AF          ; save A
   003A CD 23 00      [17]   64         CALL    I2CWBIT
   003D F1            [10]   65         POP     AF
   003E C1            [10]   66         POP     BC
   003F 10 F5         [13]   67         DJNZ    ILOOP
   0041 CD 14 00      [17]   68         CALL    I2CRBIT
   0044 C9            [10]   69         RET
                             70 
                             71 ; I2C Read Byte routine
                             72 ; Destroys BC
                             73 ; Returns A
   0045                      74 I2CRBYTE:
   0045 06 08         [ 7]   75         LD      B,8
   0047 0E 00         [ 7]   76         LD      C,0
   0049                      77 LOOP3:
   0049 C5            [11]   78         PUSH    BC
   004A CD 14 00      [17]   79         CALL    I2CRBIT     ; get bit in carry flag
   004D C1            [10]   80         POP     BC
   004E CB 11         [ 8]   81         RL      C           ; rotate carry into bit0 of C register
   0050 10 F7         [13]   82         DJNZ    LOOP3
   0052 AF            [ 4]   83         XOR     A           ; clear carry flag              
   0053 C5            [11]   84         PUSH    BC
   0054 CD 23 00      [17]   85         CALL    I2CWBIT
   0057 C1            [10]   86         POP     BC
   0058 79            [ 4]   87         LD      A,C
   0059 C9            [10]   88         RET
                             89 ;
                             90 
                             91 ; Read 4-byte I2C Command from device into CMDBUF
                             92 ; Uses HL
                             93 ; Destroys A,BC,HL
   005A                      94 I2CRREQ:
   005A CD 03 00      [17]   95         CALL    I2CSTART
   005D 3E 11         [ 7]   96         LD      A,I2CRADR
   005F CD 34 00      [17]   97         CALL    I2CWBYTE
   0062 38 1A         [12]   98         JR      C,SKIP
   0064 CD 45 00      [17]   99         CALL    I2CRBYTE
   0067 DD 77 00      [19]  100         LD      (IX),A
   006A CD 45 00      [17]  101         CALL    I2CRBYTE
   006D DD 77 01      [19]  102         LD      (IX+1),A  
   0070 CD 45 00      [17]  103         CALL    I2CRBYTE
   0073 DD 77 02      [19]  104         LD      (IX+2),A
   0076 CD 45 00      [17]  105         CALL    I2CRBYTE
   0079 DD 77 03      [19]  106         LD      (IX+3),A
   007C 18 14         [12]  107         JR      ENDI2C
                            108     
   007E                     109 SKIP:                       ; If no device present, fake an idle response
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                 Page 12
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



   007E 3E 2E         [ 7]  110         LD      A,0x2e  ; '.'
   0080 DD 77 00      [19]  111         LD      (IX),A
   0083 18 0D         [12]  112         JR      ENDI2C
                            113 
   0085                     114 I2CSRESP:
   0085 F5            [11]  115         PUSH    AF
   0086 CD 03 00      [17]  116         CALL    I2CSTART
   0089 3E 10         [ 7]  117         LD      A,I2CWADR
   008B CD 34 00      [17]  118         CALL    I2CWBYTE
   008E F1            [10]  119         POP     AF
   008F CD 34 00      [17]  120         CALL    I2CWBYTE
   0092                     121 ENDI2C:
   0092 CD 0A 00      [17]  122         CALL    I2CSTOP
   0095 C9            [10]  123         RET
                            124 ;
                            125 
                            126 ; Main Polling loop
                            127 ; Return carry flag if we got a valid command (not idle)
   0096                     128 POLL:
   0096 CD 5A 00      [17]  129         CALL    I2CRREQ
   0099 DD 7E 00      [19]  130         LD      A,(IX)
   009C FE 52         [ 7]  131         CP      0x52    ; 'R' - Read memory
   009E 28 1B         [12]  132         JR      Z,MREAD
   00A0 FE 57         [ 7]  133         CP      0x57    ; 'W' - Write memory
   00A2 28 1D         [12]  134         JR      Z,MWRITE
   00A4 FE 49         [ 7]  135         CP      0x49    ; 'I' - Input from port
   00A6 28 2D         [12]  136         JR      Z,PREAD
   00A8 FE 4F         [ 7]  137         CP      0x4F    ; 'O' - Output from port
   00AA 28 30         [12]  138         JR      Z,PWRITE
   00AC FE 43         [ 7]  139         CP      0x43    ; 'C' - Call subroutine
   00AE 28 3B         [12]  140         JR      Z,REMCALL
   00B0 3F            [ 4]  141         CCF
   00B1 C9            [10]  142         RET
   00B2                     143 LOADHL:
   00B2 DD 7E 01      [19]  144         LD      A,(IX+1)
   00B5 67            [ 4]  145         LD      H,A
   00B6 DD 7E 02      [19]  146         LD      A,(IX+2)
   00B9 6F            [ 4]  147         LD      L,A
   00BA C9            [10]  148         RET    
   00BB                     149 MREAD:
   00BB CD CC 00      [17]  150         CALL    LOADBC
   00BE 0A            [ 7]  151         LD      A,(BC)
   00BF 18 25         [12]  152         JR      SRESP
   00C1                     153 MWRITE:
   00C1 CD CC 00      [17]  154         CALL    LOADBC
   00C4 DD 7E 03      [19]  155         LD      A,(IX+3)
   00C7 02            [ 7]  156         LD      (BC),A
   00C8 3E 57         [ 7]  157         LD      A,0x57  ;'W'
   00CA 18 1A         [12]  158         JR      SRESP
   00CC                     159 LOADBC:
   00CC DD 7E 01      [19]  160         LD      A,(IX+1)
   00CF 47            [ 4]  161         LD      B,A
   00D0 DD 7E 02      [19]  162         LD      A,(IX+2)
   00D3 4F            [ 4]  163         LD      C,A
   00D4 C9            [10]  164         RET
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                 Page 13
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022



   00D5                     165 PREAD:
   00D5 CD CC 00      [17]  166         CALL    LOADBC
   00D8 ED 78         [12]  167         IN      A,(C)
   00DA 18 0A         [12]  168         JR      SRESP
   00DC                     169 PWRITE:
   00DC CD CC 00      [17]  170         CALL    LOADBC
   00DF DD 7E 03      [19]  171         LD      A,(IX+3)
   00E2 ED 79         [12]  172         OUT     (C),A
   00E4 3E 4F         [ 7]  173         LD      A,0x4F  ;'O'
   00E6                     174 SRESP:
   00E6 CD 85 00      [17]  175         CALL    I2CSRESP
   00E9                     176 RHERE:
   00E9 37            [ 4]  177         SCF
   00EA C9            [10]  178         RET
   00EB                     179 REMCALL:
   00EB 21 00 00      [10]  180         LD      HL,START
   00EE E5            [11]  181         PUSH    HL
   00EF CD B2 00      [17]  182         CALL    LOADHL
   00F2 E9            [ 4]  183         JP      (HL)
                            184     
   00F3                     185 INIT:
   00F3 31 F0 63      [10]  186         LD      SP,RAMADDR  ; have to set valid SP
   00F6 DD 21 F0 63   [14]  187         LD      IX,CMDBUF   ; Easy to index command buffer
                            188         
   00FA CD 04 00      [17]  189         CALL    ONCE
                            190 
                            191 ; Main routine
   00FD                     192 MAIN:
   00FD CD 44 00      [17]  193         CALL    EVERY
   0100 CD 96 00      [17]  194         CALL    POLL
   0103 38 F8         [12]  195         JR      C,MAIN
                            196         
   0105 01 80 01      [10]  197         LD      BC,BIGDEL
   0108                     198 DLOOP:
   0108 0B            [ 6]  199         DEC     BC
   0109 79            [ 4]  200         LD      A,C
   010A B0            [ 4]  201         OR      B
   010B 20 FB         [12]  202         JR      NZ,DLOOP
   010D 18 EE         [12]  203         JR      MAIN
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                 Page 14
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022

Symbol Table

    .__.$$$.       =   2710 L   |     .__.ABS.       =   0000 G
    .__.CPU.       =   0000 L   |     .__.H$L.       =   0000 L
  3 AHEAD              002D R   |     BIGDEL         =   0180 
  2 CLRSCL             0013 R   |   2 CLRSDA             002C R
    CMDBUF         =   63F0     |   3 DLOOP              0108 R
  3 DOCLR              002A R   |   3 ENDI2C             0092 R
  2 EVERY              0044 R   |   3 I2CDELAY           0002 R
    I2CRADR        =   0011     |   3 I2CRBIT            0014 R
  3 I2CRBYTE           0045 R   |   3 I2CRREQ            005A R
  3 I2CSRESP           0085 R   |   3 I2CSTART           0003 R
  3 I2CSTOP            000A R   |     I2CWADR        =   0010 
  3 I2CWBIT            0023 R   |   3 I2CWBYTE           0034 R
  3 ILOOP              0036 R   |   3 INIT               00F3 R
    IOREG          =   0400     |   3 LOADBC             00CC R
  3 LOADHL             00B2 R   |   3 LOOP3              0049 R
  3 MAIN               00FD R   |   3 MREAD              00BB R
  3 MWRITE             00C1 R   |   3 NMI                0000 R
    NMIADD         =   0066     |   2 ONCE               0004 R
  3 POLL               0096 R   |   3 PREAD              00D5 R
  3 PWRITE             00DC R   |     RAMADDR        =   63F0 
  2 READSDA            003A R   |   3 REMCALL            00EB R
  3 RHERE              00E9 R   |   2 SETSCL             0005 R
  2 SETSDA             001E R   |   3 SKIP               007E R
  3 SRESP              00E6 R   |   2 START              0000 R
    STRTADD        =   0000 

ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                 Page 15
Hexadecimal [16-Bits]                                 Sat Feb 05 16:46:48 2022

Area Table

[_CSEG]
   0 _CODE            size    0   flags C080
[_DSEG]
   1 _DATA            size    0   flags C0C0
[first]
   2 first            size   45   flags 8988
[second]
   3 second           size  10F   flags 8988

