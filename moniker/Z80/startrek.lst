ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 1
Hexadecimal [16-Bits]                                 Sat Apr 17 22:56:33 2021



                              1 ;
                              2 ; Moniker - Z80 Version
                              3 ; by Frank Palazzolo
                              4 ; For Sega Star Trek, on ROM IO Hardware
                              5 ;
                              6 ; Note: I avoid opcode 0x32 on this platform, it will trigger
                              7 ;       the security chip on Sega Star Trek Hardware
                              8 ;
                              9         .area   CODE1   (ABS)   ; ASXXXX directive, absolute addressing
                             10 
                             11 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             12 ; You may need to adjust these variables for different targets
                             13 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             14 
                             15 ; RAM SETTINGS
                             16 
                     CFF0    17 RAMSTRT .equ    0xcff0      ; Start of RAM - need only 4 bytes here
                     CFF0    18 SSTACK  .equ    0xcff0      ; Start of stack
                             19 
                             20 ; ROM SETTINGS - usually the first 2K of memory for z80
                             21 
                     0000    22 SCHIP   .equ    0x0000          ;start of chip memory mapping
                             23 
                     0400    24 IOREG   .equ	SCHIP+0x0400    ;reserved region for IO
                             25 
                             26 ; TIMER SETTING
                     0180    27 BIGDEL  .equ    0x0180      ;delay factor
                             28 
                     0011    29 I2CRADR .equ    0x11        ; I2C read address  - I2C address 0x08
                     0010    30 I2CWADR .equ    0x10        ; I2C write address - I2C address 0x08
                             31 
                             32 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             33 ; RAM Variables	
                             34 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             35 
                     CFF0    36 CMDBUF  .equ    RAMSTRT         ; Need only 4 bytes of ram for command buffer
                             37                                 ; (We will save 12 more just in case)
                             38 
   0000                      39         .org    SCHIP
                             40     
   0000 F3            [ 4]   41 START:  DI                  ; Disable interrupts - we don't handle them
   0001 C3 2F 01      [10]   42         JP      INIT        ; go to initialization code
                             43     
                             44 ; Set the SCL pin high
                             45 ; D is the global coin counter buffer
                             46 ; Destroys A
   0004                      47 SETSCL:
   0004 7A            [ 4]   48         LD      A,D
   0005 F6 01         [ 7]   49         OR      0x01
   0007 57            [ 4]   50         LD      D,A
   0008 E5            [11]   51         PUSH    HL
   0009 26 04         [ 7]   52         LD      H,#>IOREG
   000B 6F            [ 4]   53         LD      L,A
   000C 7E            [ 7]   54         LD      A,(HL)
   000D E1            [10]   55         POP     HL
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 2
Hexadecimal [16-Bits]                                 Sat Apr 17 22:56:33 2021



   000E CD 42 00      [17]   56         CALL    I2CDELAY
   0011 C9            [10]   57         RET
                             58     
                             59 ; Set the SCL pin low
                             60 ; D is the global coin counter buffer
                             61 ; Destroys A
   0012                      62 CLRSCL:
   0012 7A            [ 4]   63         LD      A,D
   0013 E6 FE         [ 7]   64         AND     0xFE
   0015 57            [ 4]   65         LD      D,A
   0016 E5            [11]   66         PUSH    HL
   0017 26 04         [ 7]   67         LD      H,#>IOREG
   0019 6F            [ 4]   68         LD      L,A
   001A 7E            [ 7]   69         LD      A,(HL)
   001B E1            [10]   70         POP     HL
   001C C9            [10]   71         RET
                             72 
                             73 ; Set the DOUT pin low
                             74 ; D is the global coin counter buffer
                             75 ; Destroys A 
   001D                      76 SETSDA:
   001D 7A            [ 4]   77         LD      A,D
   001E E6 FD         [ 7]   78         AND     0xFD
   0020 57            [ 4]   79         LD      D,A
   0021 E5            [11]   80         PUSH    HL
   0022 26 04         [ 7]   81         LD      H,#>IOREG
   0024 6F            [ 4]   82         LD      L,A
   0025 7E            [ 7]   83         LD      A,(HL)
   0026 E1            [10]   84         POP     HL
   0027 CD 42 00      [17]   85         CALL    I2CDELAY
   002A C9            [10]   86         RET
                             87 
                             88 ; Set the DOUT pin high
                             89 ; D is the global coin counter buffer
                             90 ; Destroys A  
   002B                      91 CLRSDA:
   002B 7A            [ 4]   92         LD      A,D
   002C F6 02         [ 7]   93         OR      0x02
   002E 57            [ 4]   94         LD      D,A
   002F E5            [11]   95         PUSH    HL
   0030 26 04         [ 7]   96         LD      H,#>IOREG
   0032 6F            [ 4]   97         LD      L,A
   0033 7E            [ 7]   98         LD      A,(HL)
   0034 E1            [10]   99         POP     HL
   0035 CD 42 00      [17]  100         CALL    I2CDELAY
   0038 C9            [10]  101         RET
                            102 
                            103 ; Read the DIN pin 
                            104 ; returns bit in carry flag    
   0039                     105 READSDA:
   0039 E5            [11]  106         PUSH    HL
   003A 26 04         [ 7]  107         LD      H,#>IOREG
   003C 6F            [ 4]  108         LD      L,A
   003D 7E            [ 7]  109         LD      A,(HL)
   003E E1            [10]  110         POP     HL
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 3
Hexadecimal [16-Bits]                                 Sat Apr 17 22:56:33 2021



   003F CB 3F         [ 8]  111         SRL     A           ;carry flag
   0041 C9            [10]  112         RET
                            113     
                            114 ; Delay for half a bit time
   0042                     115 I2CDELAY:
   0042 C9            [10]  116         RET     ; This is plenty
                            117 
                            118 ; I2C Start Condition
                            119 ; Uses HL
                            120 ; Destroys A
   0043                     121 I2CSTART:
   0043 CD 2B 00      [17]  122         CALL    CLRSDA      
   0046 CD 12 00      [17]  123         CALL    CLRSCL
   0049 C9            [10]  124         RET
                            125 
                            126 ; I2C Stop Condition
                            127 ; Uses HL
                            128 ; Destroys A
   004A                     129 I2CSTOP:
   004A CD 2B 00      [17]  130         CALL    CLRSDA
   004D CD 04 00      [17]  131         CALL    SETSCL
   0050 CD 1D 00      [17]  132         CALL    SETSDA
   0053 C9            [10]  133         RET
                            134 
                            135 ; I2C Read Bit routine
                            136 ; Returns bit in carry blag
                            137 ; Destroys A
   0054                     138 I2CRBIT:
   0054 CD 1D 00      [17]  139         CALL    SETSDA
   0057 CD 04 00      [17]  140         CALL    SETSCL
   005A CD 39 00      [17]  141         CALL    READSDA
   005D F5            [11]  142         PUSH    AF          ; save carry flag
   005E CD 12 00      [17]  143         CALL    CLRSCL
   0061 F1            [10]  144         POP     AF          ; rv in carry flag
   0062 C9            [10]  145         RET
                            146 
                            147 ; I2C Write Bit routine
                            148 ; Takes carry flag
                            149 ; Destroys A
   0063                     150 I2CWBIT:
   0063 30 05         [12]  151         JR      NC,DOCLR
   0065 CD 1D 00      [17]  152         CALL    SETSDA
   0068 18 03         [12]  153         JR      AHEAD
   006A                     154 DOCLR:
   006A CD 2B 00      [17]  155         CALL    CLRSDA
   006D                     156 AHEAD:
   006D CD 04 00      [17]  157         CALL    SETSCL
   0070 CD 12 00      [17]  158         CALL    CLRSCL
   0073 C9            [10]  159         RET
                            160         
                            161         ; Make sure this code ends before address 0x66 !
                            162         
   0066                     163         .org    0x0066
                            164 
   0066 ED 45         [14]  165 NMI:    RETN
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 4
Hexadecimal [16-Bits]                                 Sat Apr 17 22:56:33 2021



                            166 
                            167 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            168 ; This function is called once, and should be used do any game-specific
                            169 ; initialization that is required
                            170 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            171 
   0068                     172 ONCE:   
   0068 3E 51         [ 7]  173         LD      A,81
   006A 21 00 E0      [10]  174         LD      HL,0xE000
   006D 77            [ 7]  175         LD      (HL),A      ; blank the screen
   006E C9            [10]  176         RET
                            177 
   006F                     178 EVERY:  
                            179 ;       YOUR CODE CAN GO HERE
   006F C9            [10]  180         RET
                            181 
                            182 ; I2C Write Byte routine
                            183 ; Takes A
                            184 ; Destroys B
                            185 ; Returns carry bit
   0070                     186 I2CWBYTE:
   0070 06 08         [ 7]  187         LD      B,8
   0072                     188 ILOOP:
   0072 C5            [11]  189         PUSH    BC          ; save B
   0073 CB 07         [ 8]  190         RLC     A    
   0075 F5            [11]  191         PUSH    AF          ; save A
   0076 CD 63 00      [17]  192         CALL    I2CWBIT
   0079 F1            [10]  193         POP     AF
   007A C1            [10]  194         POP     BC
   007B 10 F5         [13]  195         DJNZ    ILOOP
   007D CD 54 00      [17]  196         CALL    I2CRBIT
   0080 C9            [10]  197         RET
                            198 
                            199 ; I2C Read Byte routine
                            200 ; Destroys BC
                            201 ; Returns A
   0081                     202 I2CRBYTE:
   0081 06 08         [ 7]  203         LD      B,8
   0083 0E 00         [ 7]  204         LD      C,0
   0085                     205 LOOP3:
   0085 C5            [11]  206         PUSH    BC
   0086 CD 54 00      [17]  207         CALL    I2CRBIT     ; get bit in carry flag
   0089 C1            [10]  208         POP     BC
   008A CB 11         [ 8]  209         RL      C           ; rotate carry into bit0 of C register
   008C 10 F7         [13]  210         DJNZ    LOOP3
   008E AF            [ 4]  211         XOR     A           ; clear carry flag              
   008F C5            [11]  212         PUSH    BC
   0090 CD 63 00      [17]  213         CALL    I2CWBIT
   0093 C1            [10]  214         POP     BC
   0094 79            [ 4]  215         LD      A,C
   0095 C9            [10]  216         RET
                            217 ;
                            218 
                            219 ; Read 4-byte I2C Command from device into CMDBUF
                            220 ; Uses HL
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 5
Hexadecimal [16-Bits]                                 Sat Apr 17 22:56:33 2021



                            221 ; Destroys A,BC,HL
   0096                     222 I2CRREQ:
   0096 CD 43 00      [17]  223         CALL    I2CSTART
   0099 3E 11         [ 7]  224         LD      A,I2CRADR
   009B CD 70 00      [17]  225         CALL    I2CWBYTE
   009E 38 1A         [12]  226         JR      C,SKIP
   00A0 CD 81 00      [17]  227         CALL    I2CRBYTE
   00A3 DD 77 00      [19]  228         LD      (IX),A
   00A6 CD 81 00      [17]  229         CALL    I2CRBYTE
   00A9 DD 77 01      [19]  230         LD      (IX+1),A  
   00AC CD 81 00      [17]  231         CALL    I2CRBYTE
   00AF DD 77 02      [19]  232         LD      (IX+2),A
   00B2 CD 81 00      [17]  233         CALL    I2CRBYTE
   00B5 DD 77 03      [19]  234         LD      (IX+3),A
   00B8 18 14         [12]  235         JR      ENDI2C
                            236     
   00BA                     237 SKIP:                       ; If no device present, fake an idle response
   00BA 3E 2E         [ 7]  238         LD      A,0x2e  ; '.'
   00BC DD 77 00      [19]  239         LD      (IX),A
   00BF 18 0D         [12]  240         JR      ENDI2C
                            241 
   00C1                     242 I2CSRESP:
   00C1 F5            [11]  243         PUSH    AF
   00C2 CD 43 00      [17]  244         CALL    I2CSTART
   00C5 3E 10         [ 7]  245         LD      A,I2CWADR
   00C7 CD 70 00      [17]  246         CALL    I2CWBYTE
   00CA F1            [10]  247         POP     AF
   00CB CD 70 00      [17]  248         CALL    I2CWBYTE
   00CE                     249 ENDI2C:
   00CE CD 4A 00      [17]  250         CALL    I2CSTOP
   00D1 C9            [10]  251         RET
                            252 ;
                            253 
                            254 ; Main Polling loop
                            255 ; Return carry flag if we got a valid command (not idle)
   00D2                     256 POLL:
   00D2 CD 96 00      [17]  257         CALL    I2CRREQ
   00D5 DD 7E 00      [19]  258         LD      A,(IX)
   00D8 FE 52         [ 7]  259         CP      0x52    ; 'R' - Read memory
   00DA 28 1B         [12]  260         JR      Z,MREAD
   00DC FE 57         [ 7]  261         CP      0x57    ; 'W' - Write memory
   00DE 28 1D         [12]  262         JR      Z,MWRITE
   00E0 FE 49         [ 7]  263         CP      0x49    ; 'I' - Input from port
   00E2 28 2D         [12]  264         JR      Z,PREAD
   00E4 FE 4F         [ 7]  265         CP      0x4F    ; 'O' - Output from port
   00E6 28 30         [12]  266         JR      Z,PWRITE
   00E8 FE 43         [ 7]  267         CP      0x43    ; 'C' - Call subroutine
   00EA 28 3B         [12]  268         JR      Z,REMCALL
   00EC 3F            [ 4]  269         CCF
   00ED C9            [10]  270         RET
   00EE                     271 LOADHL:
   00EE DD 7E 01      [19]  272         LD      A,(IX+1)
   00F1 67            [ 4]  273         LD      H,A
   00F2 DD 7E 02      [19]  274         LD      A,(IX+2)
   00F5 6F            [ 4]  275         LD      L,A
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 6
Hexadecimal [16-Bits]                                 Sat Apr 17 22:56:33 2021



   00F6 C9            [10]  276         RET    
   00F7                     277 MREAD:
   00F7 CD 08 01      [17]  278         CALL    LOADBC
   00FA 0A            [ 7]  279         LD      A,(BC)
   00FB 18 25         [12]  280         JR      SRESP
   00FD                     281 MWRITE:
   00FD CD 08 01      [17]  282         CALL    LOADBC
   0100 DD 7E 03      [19]  283         LD      A,(IX+3)
   0103 02            [ 7]  284         LD      (BC),A
   0104 3E 57         [ 7]  285         LD      A,0x57  ;'W'
   0106 18 1A         [12]  286         JR      SRESP
   0108                     287 LOADBC:
   0108 DD 7E 01      [19]  288         LD      A,(IX+1)
   010B 47            [ 4]  289         LD      B,A
   010C DD 7E 02      [19]  290         LD      A,(IX+2)
   010F 4F            [ 4]  291         LD      C,A
   0110 C9            [10]  292         RET
   0111                     293 PREAD:
   0111 CD 08 01      [17]  294         CALL    LOADBC
   0114 ED 78         [12]  295         IN      A,(C)
   0116 18 0A         [12]  296         JR      SRESP
   0118                     297 PWRITE:
   0118 CD 08 01      [17]  298         CALL    LOADBC
   011B DD 7E 03      [19]  299         LD      A,(IX+3)
   011E ED 79         [12]  300         OUT     (C),A
   0120 3E 4F         [ 7]  301         LD      A,0x4F  ;'O'
   0122                     302 SRESP:
   0122 CD C1 00      [17]  303         CALL    I2CSRESP
   0125                     304 RHERE:
   0125 37            [ 4]  305         SCF
   0126 C9            [10]  306         RET
   0127                     307 REMCALL:
   0127 21 00 00      [10]  308         LD      HL,START
   012A E5            [11]  309         PUSH    HL
   012B CD EE 00      [17]  310         CALL    LOADHL
   012E E9            [ 4]  311         JP      (HL)
                            312     
   012F                     313 INIT:
   012F 31 F0 CF      [10]  314         LD      SP,SSTACK   ; have to set valid SP
   0132 DD 21 F0 CF   [14]  315         LD      IX,CMDBUF   ; Easy to index command buffer
                            316         
   0136 CD 68 00      [17]  317         CALL    ONCE
                            318 
                            319 ; Main routine
   0139                     320 MAIN:
   0139 CD 6F 00      [17]  321         CALL    EVERY
   013C CD D2 00      [17]  322         CALL    POLL
   013F 38 F8         [12]  323         JR      C,MAIN
                            324         
   0141 01 80 01      [10]  325         LD      BC,BIGDEL
   0144                     326 MLOOP:
   0144 0B            [ 6]  327         DEC     BC
   0145 79            [ 4]  328         LD      A,C
   0146 B0            [ 4]  329         OR      B
   0147 20 FB         [12]  330         JR      NZ,MLOOP
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 7
Hexadecimal [16-Bits]                                 Sat Apr 17 22:56:33 2021



   0149 18 EE         [12]  331         JR      MAIN
                            332 
                            333 
                            334     
                            335 
ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 8
Hexadecimal [16-Bits]                                 Sat Apr 17 22:56:33 2021

Symbol Table

    .__.$$$.       =   2710 L   |     .__.ABS.       =   0000 G
    .__.CPU.       =   0000 L   |     .__.H$L.       =   0000 L
  2 AHEAD              006D R   |     BIGDEL         =   0180 
  2 CLRSCL             0012 R   |   2 CLRSDA             002B R
    CMDBUF         =   CFF0     |   2 DOCLR              006A R
  2 ENDI2C             00CE R   |   2 EVERY              006F R
  2 I2CDELAY           0042 R   |     I2CRADR        =   0011 
  2 I2CRBIT            0054 R   |   2 I2CRBYTE           0081 R
  2 I2CRREQ            0096 R   |   2 I2CSRESP           00C1 R
  2 I2CSTART           0043 R   |   2 I2CSTOP            004A R
    I2CWADR        =   0010     |   2 I2CWBIT            0063 R
  2 I2CWBYTE           0070 R   |   2 ILOOP              0072 R
  2 INIT               012F R   |     IOREG          =   0400 
  2 LOADBC             0108 R   |   2 LOADHL             00EE R
  2 LOOP3              0085 R   |   2 MAIN               0139 R
  2 MLOOP              0144 R   |   2 MREAD              00F7 R
  2 MWRITE             00FD R   |   2 NMI                0066 R
  2 ONCE               0068 R   |   2 POLL               00D2 R
  2 PREAD              0111 R   |   2 PWRITE             0118 R
    RAMSTRT        =   CFF0     |   2 READSDA            0039 R
  2 REMCALL            0127 R   |   2 RHERE              0125 R
    SCHIP          =   0000     |   2 SETSCL             0004 R
  2 SETSDA             001D R   |   2 SKIP               00BA R
  2 SRESP              0122 R   |     SSTACK         =   CFF0 
  2 START              0000 R

ASxxxx Assembler V05.20  (Zilog Z80 / Hitachi HD64180)                  Page 9
Hexadecimal [16-Bits]                                 Sat Apr 17 22:56:33 2021

Area Table

[_CSEG]
   0 _CODE            size    0   flags C080
   2 CODE1            size  14B   flags  908
[_DSEG]
   1 _DATA            size    0   flags C0C0

