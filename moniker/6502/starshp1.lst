ASxxxx Assembler V05.31  (Rockwell 6502/6510/65C02)                     Page 1
Hexadecimal [16-Bits]                                 Thu Jul 14 08:36:32 2022



                              1 ;
                              2 ; Moniker - 6502 Version
                              3 ; by Frank Palazzolo
                              4 ; For ROM IO Hardware
                              5 ;
                              6         .area   CODE1   (ABS)   ; ASXXXX directive, absolute addressing
                              7 
                              8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                              9 ; You may need to adjust these variables for different targets
                             10 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             11 
                             12 ; RAM SETTINGS - usually in zero page
                             13 
                     0000    14 RAMSTRT .equ    0x00    ;start of ram, needs 7 bytes starting here
                     00FF    15 SSTACK	.equ	0xff	;start of stack, needs some memory below this address
                             16 
                             17 ; ROM SETTINGS - usually the last 2K of memory for 6502
                             18 
                     F800    19 SCHIP   .equ     0xf800   ;start of chip memory mapping
                             20 
                     FFA0    21 IOREGR	.equ	SCHIP+0x07a0	;reserved region for IO Read
                     FFC0    22 IOREGW	.equ	SCHIP+0x07c0	;reserved region for IO Write
                     FFFA    23 VECTORS	.equ	SCHIP+0x07fa	;reserved for vectors
                             24 
                             25 ; TIMER SETTING
                     0180    26 BIGDEL	.equ	0x0180   ;delay factor
                             27 
                     0011    28 I2CRADR .equ     0x11    ;I2C read address  - I2C address 0x08
                     0010    29 I2CWADR .equ     0x10    ;I2C write address - I2C address 0x08
                             30 
                             31 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             32 ; RAM Variables	
                             33 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             34 
                     0000    35 OUTBUF	.equ	RAMSTRT	        ;buffer for output states
                     0001    36 B	.equ	RAMSTRT+0x01	;general purpose
                     0002    37 C	.equ	RAMSTRT+0x02	;general purpose
                     0003    38 CMDBUF0 .equ	RAMSTRT+0x03	;command buffer
                     0004    39 CMDBUF1 .equ	RAMSTRT+0x04	;command buffer
                     0005    40 CMDBUF2 .equ	RAMSTRT+0x05	;command buffer
                     0006    41 CMDBUF3 .equ	RAMSTRT+0x06	;command buffer
                             42 
   F800                      43 	.org	SCHIP	;last 2K of memory starts here
                             44 
                             45 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             46 ; This function is called once, and should be used do any game-specific
                             47 ; initialization that is required
                             48 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             49 
   F800                      50 ONCE:
                             51 ;       YOUR CODE CAN GO HERE
   F800 60            [ 6]   52         rts
                             53 
                             54 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             55 ; This function is called every time during the polling loop.  It can be
ASxxxx Assembler V05.31  (Rockwell 6502/6510/65C02)                     Page 2
Hexadecimal [16-Bits]                                 Thu Jul 14 08:36:32 2022



                             56 ; used to run watchdog code, etc.  I have provided a simple delay loop
                             57 ; so that the I2C slave is not overwhelmed
                             58 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             59 
   F801                      60 EVERY:
                             61         ; reset the starshp1 watchdog
   F801 A9 01         [ 2]   62 	lda     #0x01
   F803 8D 06 DC      [ 4]   63 	sta     0xdc06
   F806 A9 FE         [ 2]   64 	lda     #0xfe
   F808 8D 00 CC      [ 4]   65 	sta     0xcc00
   F80B 8D 00 CC      [ 4]   66 	sta     0xcc00
   F80E 8D 00 CC      [ 4]   67 	sta     0xcc00
   F811 8D 00 CC      [ 4]   68 	sta     0xcc00
   F814 8D 00 CC      [ 4]   69 	sta     0xcc00
   F817 8D 00 CC      [ 4]   70 	sta     0xcc00
   F81A 8D 00 CC      [ 4]   71 	sta     0xcc00
   F81D 8D 00 CC      [ 4]   72 	sta     0xcc00
   F820 8D 00 CC      [ 4]   73 	sta     0xcc00
   F823 8D 00 CC      [ 4]   74 	sta     0xcc00
   F826 8D 00 CC      [ 4]   75 	sta     0xcc00
   F829 8D 00 CC      [ 4]   76 	sta     0xcc00
   F82C 8D 00 CC      [ 4]   77 	sta     0xcc00
   F82F 8D 00 CC      [ 4]   78 	sta     0xcc00
   F832 8D 00 CC      [ 4]   79 	sta     0xcc00
   F835 8D 00 CC      [ 4]   80 	sta     0xcc00
   F838 8D 00 CC      [ 4]   81 	sta     0xcc00
   F83B 8D 00 CC      [ 4]   82 	sta     0xcc00
   F83E 8D 00 CC      [ 4]   83 	sta     0xcc00
   F841 8D 00 CC      [ 4]   84 	sta     0xcc00
   F844 8D 06 DC      [ 4]   85 	sta     0xdc06
                             86 
   F847 60            [ 6]   87         rts
                             88 
                             89 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             90 ; Main Program code starts here
                             91 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             92 
                             93 ; NMI Handler
   F848 40            [ 6]   94 NMI:	rti             ;Don't do anything on an NMI
                             95 
   F849 A5 00         [ 3]   96 SETSCL:	lda	OUTBUF
   F84B 09 01         [ 2]   97 	ora	#0x01
   F84D 85 00         [ 3]   98         sta     OUTBUF
   F84F AA            [ 2]   99         tax
   F850 BD C0 FF      [ 5]  100         lda     IOREGW,X
   F853 20 85 F8      [ 6]  101 	jsr	I2CDLY
   F856 60            [ 6]  102 	rts
                            103 
   F857 A5 00         [ 3]  104 CLRSCL:	lda	OUTBUF
   F859 29 1E         [ 2]  105 	and	#0x1e
   F85B 85 00         [ 3]  106 	sta	OUTBUF
   F85D AA            [ 2]  107         tax
   F85E BD C0 FF      [ 5]  108         lda     IOREGW,X
   F861 60            [ 6]  109 	rts
                            110 
ASxxxx Assembler V05.31  (Rockwell 6502/6510/65C02)                     Page 3
Hexadecimal [16-Bits]                                 Thu Jul 14 08:36:32 2022



   F862 A5 00         [ 3]  111 SETSDA:	lda	OUTBUF
   F864 29 1D         [ 2]  112 	and	#0x1d
   F866 85 00         [ 3]  113         sta     OUTBUF
   F868 AA            [ 2]  114         tax
   F869 BD C0 FF      [ 5]  115         lda     IOREGW,X
   F86C 20 85 F8      [ 6]  116 	jsr	I2CDLY
   F86F 60            [ 6]  117 	rts
                            118 
   F870 A5 00         [ 3]  119 CLRSDA:	lda	OUTBUF
   F872 09 02         [ 2]  120 	ora	#0x02
   F874 85 00         [ 3]  121         sta     OUTBUF
   F876 AA            [ 2]  122         tax
   F877 BD C0 FF      [ 5]  123         lda     IOREGW,X
   F87A 20 85 F8      [ 6]  124 	jsr	I2CDLY
   F87D 60            [ 6]  125 	rts
                            126 
   F87E A6 00         [ 3]  127 READSDA:	ldx	OUTBUF
   F880 BD A0 FF      [ 5]  128         lda     IOREGR,X
   F883 6A            [ 2]  129         ror
   F884 60            [ 6]  130 	rts				
                            131 
                            132 ; Delay for half a bit time
   F885 60            [ 6]  133 I2CDLY:	rts		; TBD - this is plenty?
                            134 
                            135 ; I2C Start Condition
   F886                     136 I2CSTART:
   F886 20 70 F8      [ 6]  137         jsr    CLRSDA      
   F889 20 57 F8      [ 6]  138         jsr    CLRSCL
   F88C 60            [ 6]  139         rts
                            140 
                            141 ; I2C Stop Condition
                            142 ; Uses HL
                            143 ; Destroys A
   F88D                     144 I2CSTOP:
   F88D 20 70 F8      [ 6]  145         jsr    CLRSDA
   F890 20 49 F8      [ 6]  146         jsr    SETSCL
   F893 20 62 F8      [ 6]  147         jsr    SETSDA
   F896 60            [ 6]  148         rts
                            149         
   F897                     150 I2CRBIT:
   F897 20 62 F8      [ 6]  151 	jsr	SETSDA
   F89A 20 49 F8      [ 6]  152 	jsr	SETSCL
   F89D 20 7E F8      [ 6]  153 	jsr	READSDA	; sets/clears carry flag
   F8A0 20 57 F8      [ 6]  154 	jsr     CLRSCL
   F8A3 60            [ 6]  155 	rts		; carry flag still good here
                            156 
   F8A4                     157 I2CWBIT:
   F8A4 90 06         [ 4]  158 	bcc	DOCLR
   F8A6 20 62 F8      [ 6]  159 	jsr	SETSDA
   F8A9 4C AF F8      [ 3]  160 	jmp	AHEAD
   F8AC                     161 DOCLR:
   F8AC 20 70 F8      [ 6]  162 	jsr	CLRSDA
   F8AF                     163 AHEAD:
   F8AF 20 49 F8      [ 6]  164 	jsr	SETSCL
   F8B2 20 57 F8      [ 6]  165 	jsr	CLRSCL
ASxxxx Assembler V05.31  (Rockwell 6502/6510/65C02)                     Page 4
Hexadecimal [16-Bits]                                 Thu Jul 14 08:36:32 2022



   F8B5 60            [ 6]  166 	rts
                            167         
   F8B6                     168 I2CWBYTE:
   F8B6 48            [ 3]  169 	pha
   F8B7 A9 08         [ 2]  170 	lda	#0x08
   F8B9 85 01         [ 3]  171 	sta	B
   F8BB 68            [ 4]  172 	pla
   F8BC                     173 ILOOP:
   F8BC 2A            [ 2]  174 	rol
   F8BD 48            [ 3]  175 	pha
   F8BE 20 A4 F8      [ 6]  176 	jsr	I2CWBIT
   F8C1 68            [ 4]  177 	pla
   F8C2 C6 01         [ 5]  178 	dec	B
   F8C4 D0 F6         [ 4]  179 	bne	ILOOP
   F8C6 20 97 F8      [ 6]  180 	jsr	I2CRBIT
   F8C9 60            [ 6]  181 	rts
                            182 	
   F8CA                     183 I2CRBYTE:
   F8CA A9 08         [ 2]  184         lda	#0x08
   F8CC 85 01         [ 3]  185 	sta	B
   F8CE A9 00         [ 2]  186 	lda	#0x00
   F8D0 85 02         [ 3]  187 	sta	C
   F8D2                     188 LOOP3:
   F8D2 20 97 F8      [ 6]  189         jsr     I2CRBIT     ; get bit in carry flag
   F8D5 26 02         [ 5]  190         rol     C           ; rotate carry into bit0 of C register
   F8D7 C6 01         [ 5]  191         dec	B
   F8D9 D0 F7         [ 4]  192         bne    	LOOP3
   F8DB 18            [ 2]  193         clc           	    ; clear carry flag              
   F8DC 20 A4 F8      [ 6]  194         jsr   	I2CWBIT
   F8DF A5 02         [ 3]  195         lda  	C
   F8E1 60            [ 6]  196         rts
                            197 
   F8E2                     198 I2CRREQ:
   F8E2 20 86 F8      [ 6]  199         jsr     I2CSTART
   F8E5 A9 11         [ 2]  200         lda	#I2CRADR
   F8E7 20 B6 F8      [ 6]  201         jsr     I2CWBYTE
   F8EA B0 17         [ 4]  202         bcs     SKIP
   F8EC 20 CA F8      [ 6]  203         jsr     I2CRBYTE
   F8EF 85 03         [ 3]  204         sta     CMDBUF0
   F8F1 20 CA F8      [ 6]  205         jsr     I2CRBYTE
   F8F4 85 04         [ 3]  206         sta     CMDBUF1
   F8F6 20 CA F8      [ 6]  207         jsr     I2CRBYTE
   F8F9 85 05         [ 3]  208         sta     CMDBUF2
   F8FB 20 CA F8      [ 6]  209         jsr     I2CRBYTE
   F8FE 85 06         [ 3]  210         sta     CMDBUF3
   F900 4C 17 F9      [ 3]  211         jmp     ENDI2C
                            212     
   F903                     213 SKIP:                       ; If no device present, fake an idle response
   F903 A9 2E         [ 2]  214         lda     #0x2e  ; '.'
   F905 85 03         [ 3]  215         sta     CMDBUF0
   F907 4C 17 F9      [ 3]  216         jmp     ENDI2C
                            217 
   F90A                     218 I2CSRESP:
   F90A 48            [ 3]  219         pha
   F90B 20 86 F8      [ 6]  220         jsr     I2CSTART
ASxxxx Assembler V05.31  (Rockwell 6502/6510/65C02)                     Page 5
Hexadecimal [16-Bits]                                 Thu Jul 14 08:36:32 2022



   F90E A9 10         [ 2]  221         lda     #I2CWADR
   F910 20 B6 F8      [ 6]  222         jsr     I2CWBYTE
   F913 68            [ 4]  223         pla
   F914 20 B6 F8      [ 6]  224         jsr     I2CWBYTE
   F917                     225 ENDI2C:
   F917 20 8D F8      [ 6]  226         jsr     I2CSTOP
   F91A 60            [ 6]  227         rts
                            228 
   F91B                     229 POLL:
   F91B 20 E2 F8      [ 6]  230         jsr     I2CRREQ
   F91E A5 03         [ 3]  231         lda     CMDBUF0
   F920 C9 52         [ 2]  232         cmp     #0x52    	; 'R' - Read memory
   F922 F0 0A         [ 4]  233         beq     MREAD
   F924 C9 57         [ 2]  234         cmp     #0x57    	; 'W' - Write memory
   F926 F0 10         [ 4]  235         beq	MWRITE
   F928 C9 43         [ 2]  236         cmp     #0x43    	; 'C' - Call subroutine
   F92A F0 26         [ 4]  237         beq	REMCALL
   F92C 18            [ 2]  238         clc
   F92D 60            [ 6]  239         rts
                            240 
   F92E                     241 MREAD:
   F92E 20 44 F9      [ 6]  242         jsr     LOADBC
   F931 A0 00         [ 2]  243         ldy	#0x00
   F933 B1 01         [ 6]  244         lda	[B],Y
   F935 4C 4D F9      [ 3]  245         jmp     SRESP
   F938                     246 MWRITE:
   F938 20 44 F9      [ 6]  247         jsr     LOADBC
   F93B A5 06         [ 3]  248         lda     CMDBUF3
   F93D 91 01         [ 6]  249         sta     [B],Y
   F93F A9 57         [ 2]  250         lda     #0x57  	;'W'
   F941 4C 4D F9      [ 3]  251         jmp     SRESP
   F944                     252 LOADBC:
   F944 A5 05         [ 3]  253 	lda	CMDBUF2
   F946 85 01         [ 3]  254 	sta	B
   F948 A5 04         [ 3]  255 	lda	CMDBUF1
   F94A 85 02         [ 3]  256 	sta	C
   F94C 60            [ 6]  257 	rts
                            258 	
   F94D                     259 SRESP:
   F94D 20 0A F9      [ 6]  260         jsr    I2CSRESP
   F950                     261 RHERE:
   F950 38            [ 2]  262         sec
   F951 60            [ 6]  263         rts
   F952                     264 REMCALL:
   F952 A9 F9         [ 2]  265 	lda	#>(START-1)
   F954 48            [ 3]  266         pha
   F955 A9 5D         [ 2]  267         lda	#<(START-1)
   F957 48            [ 3]  268         pha
   F958 20 44 F9      [ 6]  269         jsr     LOADBC
   F95B 6C 01 00      [ 5]  270         jmp     [B]
                            271         
                            272 ;;;;;;;;;;
                            273 	
   F95E                     274 START:
   F95E 78            [ 2]  275         sei             ; disable interrupts
ASxxxx Assembler V05.31  (Rockwell 6502/6510/65C02)                     Page 6
Hexadecimal [16-Bits]                                 Thu Jul 14 08:36:32 2022



   F95F A2 FF         [ 2]  276 	ldx	#SSTACK
   F961 9A            [ 2]  277 	txs		; Init stack
   F962 D8            [ 2]  278 	cld		; No Decimal
   F963 A9 00         [ 2]  279         lda     #0x00
   F965 85 00         [ 3]  280         sta     OUTBUF
   F967 20 00 F8      [ 6]  281         jsr     ONCE
                            282 
                            283 ; Main routine
   F96A                     284 MAIN:
   F96A 20 01 F8      [ 6]  285         jsr     EVERY
   F96D 20 1B F9      [ 6]  286         jsr     POLL
   F970 B0 F8         [ 4]  287         bcs     MAIN
   F972 A9 01         [ 2]  288         lda	#BIGDEL>>8
   F974 85 01         [ 3]  289         sta	B
   F976 A9 80         [ 2]  290         lda	#BIGDEL%256
   F978 85 02         [ 3]  291         sta	C
   F97A                     292 MLOOP:
   F97A A5 02         [ 3]  293         lda	C
   F97C F0 05         [ 4]  294         beq	DECBOTH
   F97E C6 02         [ 5]  295         dec	C
   F980 4C 7A F9      [ 3]  296         jmp	MLOOP
   F983                     297 DECBOTH:
   F983 A5 01         [ 3]  298 	lda	B
   F985 F0 E3         [ 4]  299 	beq	MAIN
   F987 C6 02         [ 5]  300 	dec	C
   F989 C6 01         [ 5]  301 	dec	B
   F98B 4C 7A F9      [ 3]  302 	jmp	MLOOP
                            303 
   FFC0                     304         .org    IOREGW
                            305         
   FFC0 00 01 02 03 04 05   306         .DB     0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f
        06 07 08 09 0A 0B
        0C 0D 0E 0F
   FFD0 10 11 12 13 14 15   307         .DB     0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f
        16 17 18 19 1A 1B
        1C 1D 1E 1F
                            308 
                            309 ;       vectors
                            310 
   FFFA                     311 	.org	SCHIP+0x07fa
                            312 
   FFFA 48 F8               313 	.dw	NMI
   FFFC 5E F9               314 	.dw	START
   FFFE 5E F9               315 	.dw	START
                            316 	
                            317 	
                            318 	
ASxxxx Assembler V05.31  (Rockwell 6502/6510/65C02)                     Page 7
Hexadecimal [16-Bits]                                 Thu Jul 14 08:36:32 2022

Symbol Table

    .__.$$$.       =   2710 L   |     .__.ABS.       =   0000 G
    .__.CPU.       =   0000 L   |     .__.H$L.       =   0000 L
  2 AHEAD              F8AF R   |     B              =   0001 
    BIGDEL         =   0180     |     C              =   0002 
  2 CLRSCL             F857 R   |   2 CLRSDA             F870 R
    CMDBUF0        =   0003     |     CMDBUF1        =   0004 
    CMDBUF2        =   0005     |     CMDBUF3        =   0006 
  2 DECBOTH            F983 R   |   2 DOCLR              F8AC R
  2 ENDI2C             F917 R   |   2 EVERY              F801 R
  2 I2CDLY             F885 R   |     I2CRADR        =   0011 
  2 I2CRBIT            F897 R   |   2 I2CRBYTE           F8CA R
  2 I2CRREQ            F8E2 R   |   2 I2CSRESP           F90A R
  2 I2CSTART           F886 R   |   2 I2CSTOP            F88D R
    I2CWADR        =   0010     |   2 I2CWBIT            F8A4 R
  2 I2CWBYTE           F8B6 R   |   2 ILOOP              F8BC R
    IOREGR         =   FFA0     |     IOREGW         =   FFC0 
  2 LOADBC             F944 R   |   2 LOOP3              F8D2 R
  2 MAIN               F96A R   |   2 MLOOP              F97A R
  2 MREAD              F92E R   |   2 MWRITE             F938 R
  2 NMI                F848 R   |   2 ONCE               F800 R
    OUTBUF         =   0000     |   2 POLL               F91B R
    RAMSTRT        =   0000     |   2 READSDA            F87E R
  2 REMCALL            F952 R   |   2 RHERE              F950 R
    SCHIP          =   F800     |   2 SETSCL             F849 R
  2 SETSDA             F862 R   |   2 SKIP               F903 R
  2 SRESP              F94D R   |     SSTACK         =   00FF 
  2 START              F95E R   |     VECTORS        =   FFFA 

ASxxxx Assembler V05.31  (Rockwell 6502/6510/65C02)                     Page 8
Hexadecimal [16-Bits]                                 Thu Jul 14 08:36:32 2022

Area Table

[_CSEG]
   0 _CODE            size    0   flags C080
   2 CODE1            size    0   flags  908
[_DSEG]
   1 _DATA            size    0   flags C0C0

